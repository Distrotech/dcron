V.4.0pre
    Forked yacron from dcron

      * Applied "Daniel's patch" to enable logging to syslog (-S) or to
		file (-L file). Added further logging improvements. -l switch i
		accepts symbolic log levels, as described in syslog.3 and logger.1.
		Syslogs are sent using identity LOG_IDENT (defaults to "crond") and
		facility LOG_CRON. The date etc. formatting of file-based logs is
		defined in LOG_DATE_FMT.

	  * When crond is run in the foreground, all log messages are sent to stderr
		instead of syslog or the declared -L file.

	  * Added -M mailscript and -m mailto switches. If a mailscript
		is supplied, it is called with no arguments and with a mail header,
		followed by the stdout and stderr of the cronjob, as stdin. When no
		mailscript is supplied, attempts to mail cron output are logged.
		When cronjobs have no stdout or stderr, nothing is sent to either
		sendmail or a custom mailscript.

	  * Log when a cronjob exits with a code that's neither 0 nor EAGAIN
		(regardless of whether any cron output is generated). Any jobs
		waiting on the failed job are also cancelled (see below).

	  * Use getopt in main.c and crontab.c.

	  * crontab uses $EDITOR before $VISUAL.

	  * TMPDIR specifies where to save crontabs-being-edited and output files
		from running jobs. Latter are saved in a secure subdirectory.

	  * '* * 2,5 * Mon' in crontab = "2nd and last Mon of the month", instead
		of "2nd and 5th day of the month, or any Mon." Last Mondays, etc. of
		the month are always recognized as "5th" Mondays, even if there are
		only 4 Mondays in the month. (They're also then recognized as "4th"
		Mondays, too; but if you say '* * 4,5 * Mon' the job will only be
		scheduled once.)

	  * Accept @reboot, @daily, etc. options in crontabs. @daily jobs
		will be run whenever at least a day has passed since they were last
		run (the machine need not be awake at any specific time).
		These jobs require an ID=<job_name> at the start of their
		command column, to supply a name for the timestamp file. The formatting
		of the timestamp files is defined in TIMESTAMP_FMT.

	  * Also accept FREQ=2d/1h assignments: this will try to run a command
		once every two days, but only during the range of time specified in
		the crontab line's first five columns. If the command exits with status
		EAGAIN (exit code 11) it will be retried again every 1 hour (until
		it exits with a different code). These jobs also require an
		ID=<job_name> assignment.

	  * Also accept AFTER=<target_job>/1d assignments: if the specified
		target_job is scheduled to run within the next 1 day, wait until
		it has run and exited successfully before running the current command.
		If target_job exits with a code that's neither 0 nor EAGAIN, the
		waiting job is cancelled.

	  * When scheduling a job that waits on a target_job that's declared
		using @reboot or @noauto---and so which would never again be regularly
		scheduled---crond also schedules the target_job.

	  * When crond sees a cron.update file (generated by crontab to announce
		an updated crontab file), it re-reads timestamp files. Also, lines of the
		form 'user job1 !job2' in cron.update will schedule the named jobs.
		Here 'job2' will be scheduled to run immediately, without waiting for any
		other jobs.

v3.2
    Fixed a minor bug, remove the newline terminating a line only if there
    is a newline to remove.

v3.1
    Add support for root-run crontab files in /etc/cron.d and rewrite a
    good chunk of the crontab file management code.  By VMiklos and Matt
    Dillon.

v3.0
    Fix /tmp race and misc cleanups from Emiel Kollof <emiel@gamepoint.net>

v2.9
    Modernize the code, remove strcpy() and sprintf() in favor of snprintf().
    (Supplied by Christine Jamison <technobabe@mail.nwmagic.net>)

v2.8
    Fixed bug found by Christian HOFFMANN.  newline removal was broken
    for lines that began with whitespace, causing crontab lines to be
    chopped off.

v2.7
    Committed changes suggested by
    Ragnar Hojland Espinosa <ragnar@redestb.es>

    Fixed a few printfs, removed strdup() function ( strdup() is now standard
    in all major clib's )

v2.4-2.6

	( changes lost )

v2.3
    dillon:	Fixed bug in job.c -- if ChangeUser() fails, would return from child fork rather
		then exit!  Oops.

v2.2
    dillon:	Initial release

